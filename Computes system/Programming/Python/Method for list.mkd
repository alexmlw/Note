#  Методы, определенные для работы со списком.

## Метод remove
*list.remove(obj), где*

*obj - объект (число, символ, строка, ...)*

Метод удаляет первое вхождение указанного значения из списка.
Если значение обнаружится в списке, объект, содержащий это значение,
будет удалено из списка (и список сократится на один элемент).

```python
>>> nums = [ 1, 2, 3, 4 ]
>>> nums.remove(3)
>>> nums
[1, 2, 4]
```
Если значение не обнаружится в списке, интерпретатор выдаст ошибку.

```python
>>> nums.remove(50)
Traceback (most recent call last):
  File "<pyshell#5>", line 1, in <module>
    nums.remove(50)
ValueError: list.remove(x): x not in list
```

## Метод pop
*list.pop(i), где*

*i - индекс объекта;*

Метод pop удаляет из списка и возвращает объект по индексу. Вызов метода
без индекса, будет удален и возвращен последний объект в списке.

```python
>>> nums.pop()
4
>>> nums
[1, 2]
```

Если указан индекс, будет удален и возвращен объект согласно индексу.

```python
>>> i = nums.pop(0)
>>> nums
[2]
>>> i
1
```

В случае когда метод вызван с несуществующим индексом или список пуст,
интерпретатор выдаст ошибку.

```python
>>> nums.pop(5)
Traceback (most recent call last):
  File "<pyshell#14>", line 1, in <module>
    nums.pop(5)
IndexError: pop index out of range
```

## Метод append
*list.append(obj), где*

*obj - объект (число, символ, строка, ...)*

Метод append добавляет объект в конец списка.

```python
>>> num = []
>>> num.append(1)
>>> num
[1]
>>> num.append([2, 3])
>>> num
[1, [2, 3]]
```

## Метод extend
*list.extend(listB), где*

*listB - список*

Метод extend принимает еще один список и добавляет все его элементы
в существующий список.

```python
>>> nums
[2]
>>> nums.extend([ 3, 4 ])
>>> nums
[2, 3, 4]
```

## Метод insert
*list.insert(i, j), где*

*i - индекс объекта;*

*j - значение (объект) для вставки.*

Метод insert вставляет объект в существующий список перед индексом.

```python
>>> nums.insert(0, 1)
>>> nums
[1, 2, 3, 4]
```

## Метод copy
*listA = listB.copy(), где*

*listA - список A*

*listB - список B*

Метод copy возвращает копию списка.

```python
>>> numbers = nums.copy()
>>> numbers
[1, 2, 3, 4]
>>> numbers.append(5)
>>> numbers
[1, 2, 3, 4, 5]
>>> nums
[1, 2, 3, 4]
```

